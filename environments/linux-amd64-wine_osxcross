FROM amd64/debian:buster

########################################
# Prepare a building environment
########################################

RUN echo 'deb-src http://deb.debian.org/debian buster main' >> /etc/apt/sources.list
RUN echo 'deb-src http://security.debian.org/debian-security buster/updates main' >> /etc/apt/sources.list
RUN echo 'deb-src http://deb.debian.org/debian buster-updates main' >> /etc/apt/sources.list

RUN apt-get update
RUN apt-get -y build-dep wine
RUN apt-get -y install git llvm clang wget
RUN apt-get -y install libjs-mathjax python-yaml lib32gcc1 lib32stdc++6 libc6-i386 libctypes-ocaml-dev ocaml-nox libjs-jquery python-six python-pygments libjs-underscore cmake
RUN apt-get -y install gcc-mingw-w64-i686 gcc-mingw-w64-x86-64
RUN apt-get -y install texinfo

RUN git clone https://github.com/tpoechtrager/osxcross /root/osxcross
COPY darwin/SDK/MacOSX10.13.sdk.tar.xz /root/osxcross/tarballs/
RUN ln -s "/root/osxcross/target/SDK/MacOSX10.13.sdk/System" "/System"

### Clang 8
RUN mkdir /root/clang-8
WORKDIR /root/clang-8
RUN wget https://repository.playonlinux.com/clang8/llvm-8-mwine32-release.tar.gz
RUN tar -xvf llvm-8-mwine32-release.tar.gz

RUN cd /root/osxcross && OSX_VERSION_MIN=10.8 UNATTENDED=1 ./build.sh

# We want the custom Clang first in path so OSXCROSS wrappers use that
ENV PATH="/root/clang-8/llvm/bin:/root/osxcross/target/bin:${PATH}"

### OSXCROSS envirument settings;
ENV MACOSX_DEPLOYMENT_TARGET="10.13"
# OSXCROSS will handle headers/libraries/frameworks injection
ENV OSXCROSS_MP_INC="YES"
ENV CFLAGS="-msse2 -O3 -Wno-unused-command-line-argument -Wno-deprecated-declarations"

# Copy in premade wrappers
COPY darwin/wrappers/* /root/osxcross/target/bin/

########################################
# Install build scripts
########################################
RUN mkdir -p  /build-scripts/
ADD build-scripts/darwin/ /build-scripts/
ADD build-scripts/darwin/common/ /build-scripts/
ENV PATH="/build-scripts:${PATH}"


########################################
# Lets make folders to keep compiled libs inside
########################################
RUN mkdir -p "/root/osxcross/target/macports/pkgs/opt/local"
RUN ln -s "/root/osxcross/target/macports/pkgs/opt/local" "/opt/local"
RUN printf "packages.macports.org" > /root/osxcross/target/macports/MIRROR

RUN mkdir -p /opt/local/lib32
RUN mkdir -p /opt/local/lib64
RUN mkdir -p /opt/local/include


########################################
# Install wine dependencies
########################################
RUN VERSION="3.7.3" ARCH="i386" nettle.sh
RUN VERSION="3.7.3" ARCH="x86_64" nettle.sh

RUN VERSION="4.17.0" ARCH="i386" libtasn1.sh
RUN VERSION="4.17.0" ARCH="x86_64" libtasn1.sh

RUN VERSION="6.2.1" ARCH="x86_64" gmp.sh
RUN VERSION="6.2.1" ARCH="i386" gmp.sh

RUN install-staging-libs.sh


RUN VERSION="3.7.2" ARCH="x86_64" gnutls.sh
RUN VERSION="3.7.2" ARCH="i386" gnutls.sh

RUN VERSION="6.2" ARCH="x86_64" ncurses.sh
RUN VERSION="6.2" ARCH="i386" ncurses.sh

RUN VERSION="2.0.16" ARCH="x86_64" SDL2.sh
RUN VERSION="2.0.16" ARCH="i386" SDL2.sh

RUN VERSION="21.08" ARCH="x86_64" faudio.sh
RUN VERSION="21.08" ARCH="i386" faudio.sh

RUN VERSION="1.28.2" ARCH="x86_64" mpg123.sh
RUN VERSION="1.28.2" ARCH="i386" mpg123.sh

# We need to compile ncurses by ourselves (see above) to avoid terminals database is inaccessible error
# This will prevent wine-devel from installing it
RUN osxcross-macports -universal fakeinstall ncurses
RUN osxcross-macports -universal fakeinstall pulseaudio

RUN MACOSX_DEPLOYMENT_TARGET="10.11" osxcross-macports -universal install wine-devel


### Vulkan
# VulkanSDK-1.2.135.0 is the last version to be distributed within tar.gz, the dmg images can't be extracted using 7z
ENV MOLTENVK="1.2.135.0"
WORKDIR /root/
# RUN wget https://sdk.lunarg.com/sdk/download/${MOLTENVK}/mac/vulkansdk-macos-${MOLTENVK}.tar.gz
RUN wget https://web.archive.org/web/20200413122419if_/https://sdk.lunarg.com/sdk/download/1.2.135.0/mac/vulkansdk-macos-1.2.135.0.tar.gz
RUN tar -xvf vulkansdk-macos-${MOLTENVK}.tar.gz
WORKDIR /root/vulkansdk-macos-${MOLTENVK}/MoltenVK/macOS
RUN mv framework/* /opt/local/Library/Frameworks/
RUN mv dynamic/* /opt/local/lib/

### VK3D3
#ENV VKD3D="vkd3d-1.1"
#WORKDIR /root
#RUN git clone https://github.com/KhronosGroup/SPIRV-Headers
#RUN cp -a /root/SPIRV-Headers/include/* /opt/local/include/
#RUN cp -r /root/vulkansdk-macos-${MOLTENVK}/macOS/include/* /opt/local/include/
#RUN apt-get install -y libtool-bin
#COPY darwin/install_vkd3d.sh /root/

## Import fix
COPY darwin/fix_imports.sh /root/


## Removing preinstalled wine libs to prevent conflict
RUN rm /opt/local/lib/libwinesdk.*
RUN rm -r /opt/local/lib/wine
RUN rm -r /opt/local/include/wine/
