Index: dlls/winspool.drv/Makefile.in
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dlls/winspool.drv/Makefile.in b/dlls/winspool.drv/Makefile.in
--- a/dlls/winspool.drv/Makefile.in	(revision bc0853f422ac1d9f01cd87f2a829477e8933e20a)
+++ b/dlls/winspool.drv/Makefile.in	(date 1639234987494)
@@ -3,10 +3,13 @@
 IMPORTLIB = winspool
 IMPORTS   = user32 gdi32 advapi32 shell32 kernel32
 EXTRAINCL = $(CUPS_CFLAGS)
-EXTRALIBS = $(APPLICATIONSERVICES_LIBS)
+EXTRALIBS = $(APPLICATIONSERVICES_LIBS) -framework AppKit -framework Carbon -framework Quartz
 
 C_SRCS = \
 	info.c \
 	wspool.c
 
 RC_SRCS = winspool.rc
+
+OBJC_SRCS = \
+	native_print.m
\ No newline at end of file
Index: dlls/winspool.drv/info.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dlls/winspool.drv/info.c b/dlls/winspool.drv/info.c
--- a/dlls/winspool.drv/info.c	(revision bc0853f422ac1d9f01cd87f2a829477e8933e20a)
+++ b/dlls/winspool.drv/info.c	(date 1639229989385)
@@ -8404,6 +8404,9 @@
 }
 #endif
 
+
+int do_print_file(char *psFileName);
+
 /*****************************************************************************
  *          schedule_cups
  */
@@ -8432,9 +8435,14 @@
         num_options = get_cups_job_ticket_options( unixname, num_options, &options );
         num_options = get_cups_default_options( queue, num_options, &options );
 
-        TRACE( "printing via cups with options:\n" );
+        printf( "filename: %s\n", unixname );
+
+        BOOL test = do_print_file(unixname);
+        return ret;
+
+        printf( "printing via cups with options  :\n" );
         for (i = 0; i < num_options; i++)
-            TRACE( "\t%d: %s = %s\n", i, options[i].name, options[i].value );
+            printf( "\t%d: %s = %s\n", i, options[i].name, options[i].value );
 
         ret = pcupsPrintFile( queue, unixname, unix_doc_title, num_options, options );
         if (ret == 0 && pcupsLastErrorString)
Index: dlls/winspool.drv/native_print.m
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dlls/winspool.drv/native_print.m b/dlls/winspool.drv/native_print.m
new file mode 100644
--- /dev/null	(date 1639235245289)
+++ b/dlls/winspool.drv/native_print.m	(date 1639235245289)
@@ -0,0 +1,49 @@
+#import <AppKit/AppKit.h>
+#import <Quartz/Quartz.h>
+
+#import <Carbon/Carbon.h>
+
+int do_print_file(char *psFileName) {
+    __block int ret = 0;
+
+    void (^block)(void) = ^{
+        NSString *nsPsFileName = [NSString stringWithCString:psFileName encoding:NSASCIIStringEncoding];
+        NSPrintInfo *printInfo = [NSPrintInfo sharedPrintInfo];
+
+        PDFDocument *pdfDocument = [[PDFDocument alloc] initWithURL:[NSURL URLWithString: nsPsFileName]];
+
+        [printInfo setLeftMargin:0.0];
+        [printInfo setRightMargin:0.0];
+        [printInfo setTopMargin:0.0];
+        [printInfo setBottomMargin:0.0];
+        [printInfo setPaperSize:NSMakeSize(595, 842)];
+        [printInfo setHorizontalPagination:NSFitPagination];
+        [printInfo setVerticalPagination:NSFitPagination];
+
+
+        NSImage *pic =  [[NSImage alloc] initWithContentsOfFile: nsPsFileName];
+        NSRect picRect = NSRectFromCGRect(CGRectMake(0, 0, pic.size.width, pic.size.height));
+        NSImageView *imageView = [[NSImageView alloc] initWithFrame:picRect];
+        [imageView setImage:pic];
+
+        /* NSWindow* window  = [[[NSWindow alloc] initWithContentRect:picRect
+                                                         styleMask:NSWindowStyleMaskClosable
+                                                           backing:NSBackingStoreBuffered
+                                                             defer:NO] autorelease];
+        [window makeKeyAndOrderFront:NSApp];
+        [window.contentView addSubview:imageView];
+        */
+
+        NSPrintOperation * picPrint = [NSPrintOperation printOperationWithView:imageView printInfo:printInfo];
+        //PDFPrintScalingMode scale = kPDFPrintPageScaleDownToFit;
+        //NSPrintOperation *picPrint = [pdfDocument printOperationForPrintInfo: printInfo scalingMode: scale autoRotate: YES];
+
+        [picPrint setCanSpawnSeparateThread:YES];
+        [picPrint runOperation];
+    };
+
+    if ([NSThread isMainThread]) block();
+    else dispatch_sync(dispatch_get_main_queue(), block);
+
+    return ret;
+}
